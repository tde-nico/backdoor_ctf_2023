from Crypto.Util.number import long_to_bytes

leak = 19238118289292540845900132045328657353776835000175884072088390761517035980189490490459144989703825736320337279576084998885094661611740596902279433080118842
c = 8706151122704717355844546946300718218661297718003809762659247903847434328687915436733170976217817899448539289359073472514594584336897461146424215943312922513357040989774130659844482065845748436287563176648482538678604968897565248411495214863860346421741054695295323750935794123435244378357713784569300292101
n = 91006417473818125376038413443680810078297391307262694881962992972007772034646331080442026536488576075677538183326514650683359389396367200966050480101000687177953951819685597201494449347363819516742644021041231090322946128861477233797216337306770224218011823327837033401012386386102401543925525885359433574841

e = 65537

p, q = var('p q')

eq1 = p + q == leak
eq2 = p * q == n

sols = solve([eq1, eq2], [p, q])

p, q = sols[0]
p, q = p.rhs(), q.rhs()

phi = (p - 1) * (q - 1)
d = pow(e, -1, phi)

m = pow(c, d, n)
m = long_to_bytes(int(m))
print(m)

# flag{I_4m_5tuck_0n_Th3_pl4n3t_Eg0_s4ve_M3}
